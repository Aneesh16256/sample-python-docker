name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted  # Changed from ubuntu-latest to use your self-hosted runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub (optional)
      if: env.DOCKER_HUB_USERNAME && env.DOCKER_HUB_TOKEN
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker Image
      run: |
        docker build -t myapp-image:${{ github.sha }} .
        docker tag myapp-image:${{ github.sha }} myapp-image:latest

    - name: Save Docker Image
      run: docker save -o myapp-image.tar myapp-image:latest

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.GCP_HOST }} >> ~/.ssh/known_hosts

    - name: Copy Image to VM
      run: |
        scp -o StrictHostKeyChecking=no myapp-image.tar ${{ secrets.GCP_USER }}@${{ secrets.GCP_HOST }}:/tmp/

    - name: Deploy to VM
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_USER }}@${{ secrets.GCP_HOST }} << 'EOF'
          docker load -i /tmp/myapp-image.tar
          docker stop myapp || true
          docker rm myapp || true
          docker run -d --name myapp -p 80:80 --restart unless-stopped myapp-image:latest
          rm /tmp/myapp-image.tar
        EOF

    - name: Clean up local image
      run: |
        rm myapp-image.tar
